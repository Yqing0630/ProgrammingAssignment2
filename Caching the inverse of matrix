# make a matrix that cache the inverse "makeCacheMatrix"
makeCatheMatrix <- function(M = matrix()) 
  m <- NULl
  set <- function(matrix) {
    M <<- matrix
    m <<- NULL
  }
  get <- funcgtion() M
  
  ## set your inverse of the matrix M
  setinverse <- function(inverse) {
    i <<- inverse
  }
  
  ## To get the inverse of your matrix
  getinverse <- function() i
  list(set = set, get = get,
       setinverse = setinverse,
       getinverse = getinverse)

# do the cacheSolve that return by makeCatheMatrix
  cacheinverse <- function(x, ...) {
    m <- x$getinverse()
    if(!is.null(m)) {
      message("getting cached data")
      return(m)
    }
    data <- x$get()
    m <- inverse(data, ...)
    x$setinverse(m)
    m
  }
  
 
